.ORIG X3000; START OF YOUR CODE IN MEMORY - YOU ALWAYS NEED TO START WITH THIS
;----------------------------------------
; EXAMPLE: INITIALIZE AN ARRAY
;----------------------------------------

; PRINT OUT THE TWO TEST STRINGS MY_STRING AND MY_BLKW

  LEA R0, BEFORE_PROMPT; LOAD THE ADDRESS!
  PUTS; PRINT THE PROMPT
  LEA R0, MY_STRING; LOAD THE ADDRESS!
  PUTS; PRINT THE STRING
  LD R0, NEWLINE; LOAD THE NEWLINE CHARACTER (ONLY) STUDY WHY THIS IS LD, AND NOT LEA
  OUT; PRINT THE CHARACTER IN R0; NOTE WE USE OUT AND NOT PUTS... BECAUSE WE HAVE ONLY 1 CHARACTER TO PRINT
  LEA R0, MY_BLKW; LOAD THE ADDRESS!
  PUTS; PRINT THE BLOCK
  
  
; NOW WE CAN OVER-WRITE THE STRINGZ AND BLKW AREAS WITH A SPECIAL CHARACTER FROM R1

  ; PRE-LOOP SETUP
  
  LD R1, INIT_CHAR; LOAD THE CHARCTER WE WANT TO USE TO INITIALIZE MEMORY LOCATIONS
  LD R2, LOOP_MAX; SET R2 TO 200; THIS IS OUR LOOP COUNTER; WE'LL COUNT DOWN TO ZERO
  LEA R3, MY_BLKW; GET THE ADDRESS OF MY_BLKW INTO THE R3 ADDRESS...
  LEA R4, MY_STRING; GET THE ADDRESS OF MY_STRING INTO THE R4 ADDRESS


INIT_START; START LOOPING
  STR R1, R3, #0; STORE THE CHARACTER FROM R1 INTO THE ADDRESS LOCATION STORED IN R3 (ZERO OFFSET)
  STR R1, R4, #0; STORE THE CHARACTER FROM R1 INTO THE ADDRESS LOCATION STORED IN R4 (ZERO OFFSET)

  ADD R3, R3, #1; MOVE THE R3 POINTER FORWARD BY 1 MEMORY LOCATION - THIS IS THE NEXT CHARACTER WE WILL INTIALIZE IN MY_BLKW
  ADD R4, R4, #1; MOVE THE R4 POINTER FORWARD BY 1 MEMORY LOCATION - THIS IS THE NEXT CHARACTER WE WILL INIT IN MY_STRING
  ADD R2, R2, #-1; DECREMENT OUR LOOP COUNTER BY 1; WHEN THIS GETS TO ZERO, WE ARE DONE!
  BRnp INIT_START; LOOP AGAIN UNLESS THE CONDITIONAL REGISTER IS ZERO BASED ON THE R2 ADDITION ABOVE

DONE
; DONE LOOPING!

; PRINT THE STRINGS AGAIN:

  LEA R0, AFTER_PROMPT; LOAD THE ADDRESS!
  PUTS; PRINT THE PROMPT
  LEA R0, MY_STRING; LOAD THE ADDRESS!
  PUTS; PRINT THE STRING
  LD R0, NEWLINE; LOAD THE NEWLINE CHARACTER (ONLY)
  OUT; PRINT THE CHARACTER IN R0
  LEA R0, MY_BLKW; LOAD THE ADDRESS!
  PUTS; PRINT THE BLOCK
  

HALT; STOP PROGRAM EXECUTION


BEFORE_PROMPT .STRINGZ "\nHERE ARE THE TEST STRINGS BEFORE INITIALIZATION:\n";
AFTER_PROMPT .STRINGZ  "\nHERE ARE THE TEST STRINGS AFTER INITIALIZATION:\n";
MY_STRING .STRINGZ "01234567890123456789"; A STRING OF EXACTLY 20 CHARACTERS, TERMINATED WITH A "X0" (BY THE ASSEMBLER)
NEWLINE .FILL X000A; A NEWLINE CHARACTER
MY_BLKW .BLKW #30; A SUCCESSION OF DECIMAL 30 MEMORY LOCATIONS THAT ARE INITIALIZED TO 0 (BLKW ALWAYS SETS TO ZERO).
LOOP_MAX .FILL #20; DECIMAL 200!
INIT_CHAR .FILL #65; THIS IS THE LETTER "A" (CAPITAL)
.END

